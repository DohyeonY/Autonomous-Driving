안녕하세요, C109 팀 발표를 맡은 조유빈입니다.

/
이 시간에는 저희 팀의 도메인인 자율주행에 대해 소개하고, 추후 어떤 방향으로 나아갈 것인가에 대해 이야기해보겠습니다.

//
[개요]
많은 분들이 자율주행에 대해 잘 알고 계실 것 같은데요,
자율주행은 교통수단이 사람의 조작없이 스스로 판단하고 운행하는 시스템입니다.

미국의 경우 매년 발생하는 사망 사고의 94%는 차량의 결함이나 문제가 아닌 운전자 때문에 발생합니다.
반대로 생각해보면, 자동차 운전을 사람이 하지 않는다면, 전체 사망 사고의 94%를 막을 수 있다는 의미로 해석할 수 있습니다.
실제로 자율주행의 선두를 달리는 테슬라 차량의 오토파일럿 기능을 활성화했을 때 2021년 2분기 기준 사고율은 약 710만km 마다 1건 인 반면,
같은 기간 미국 도로교통안전국이 집계한 일반 자동차 사고율은 약 77만km마다 1건으로 집계됐습니다.
즉, 일반 자동차를 주행할 때보다 자율주행 기능을 활용할 때 사고율이 현저히 줄어들었음을 알 수 있습니다.

자율주행 단계는 레벨0부터 5까지로 나뉩니다. 현재 상용화된 단계는 레벨 2-3 수준으로 아직까지 운전자를 포함해 제한된 조건에서 차량이 자율적으로 주행하는 단계로 볼 수 있습니다.
수준높은 자율주행 기술을 구현하려면 상당히 많은 노력과 시간이 필요하겠지만 자율주행은 더이상 미래의 기술이 아니라 우리에게 당면한 기술로 그 필요성이 높아지고 있습니다.

/
[인지]
자율주행에 필요한 기술은 크게 인지, 판단, 제어 이렇게 세가지로 나뉩니다.
인지는 우리 몸에서 눈과 같은 역할을 합니다.
눈 앞의 사물을 인식하고 뇌가 사물을 피하겠다는 판단을 내리면 신경을 통해 우리 몸을 제어하는 방식과 비슷하게 자율주행에 기술을 구현할 수 있습니다.

인지는 객체를 인식하고 그 객체가 사람인지, 자동차인지 분류해주는 기술입니다. Classification 과 Localization, Detection 과 같은 것이 여기에 포함됩니다.

/
[센서]
다양한 센서를 통해 인지를 구현할 수 있는데요, 카메라, LiDAR, Radar, GPS, IMU 등이 여기에 해당됩니다.

[카메라]
먼저, 카메라의 경우는 사람의 눈과 같은 역할을 합니다.
자율주행에서 차선을 읽고 차선 안에 차를 유지시키거나 신호등, 표지판을 인지하는 데 사용됩니다.

/
차량에 카메라 센서를 부착한 후 실시간으로 이미지 파일을 송신하는 파일을 실행시키면,
리눅스 환경에서 이를 확인할 수 있습니다. 카메라 센서는 차선을 인식해 차량이 차선을 벗어나지 않도록 해줍니다.

/
[라이다]
라이다는 레이저펄스를 쏘아 반사되는 시간을 이용하여 거리를 인지하는 센서입니다.
레이저를 사용하기에 작은 물체도 감지할 수 있지만 눈이나 비에 굴절되어 날씨의 영향을 많이 받습니다.

[레이더]
레이더는 전방이나 후방으로 전파를 쏘아 사물간 거리나 형태를 파악합니다.
전파를 매개체로 사용하기 때문에 작은 물체의 식별은 어렵지만 날씨의 영향을 받지 않고 먼 거리까지 파악할 수 있습니다.

[GPS]
GPS는 많은 분들이 알고 계신것처럼 인공위성을 이용하여 현재 위치를 알아내는데 사용됩니다.

/
실제 지도상의 위치와의 매치를 실험하기 위해 경기도 화성시에 있는 자동차안전연구원의 시험장 맵을 로드해왔습니다.
차량에 GPS센서를 부착한 후 실시간으로 위도 경도 값을 송신하는 파일을 실행시키고,
해당 값을 좌표 변환 사이트에 입력하면 실제 지도에서의 위치를 보여줍니다.

/
[IMU]
IMU는 X, Y, Z축 3축에 대한 가속도를 측정하는 자이로센서 입니다.
GPS 의 경우 차량의 좌표만 받아올 수 있어 차가 어떻게 어느방향으로 서있는지 알 수 없습니다.
이 때 IMU 를 활용해 차량의 자세와 방향을 판단할 수 있습니다.

/
차량에 IMU 센서를 부착한 후 실시간으로 데이터를 송신하는 파일을 실행시킵니다.
이때 데이터는 차량의 자세와 방향을 결정할 수 있는 데이터입니다.
GPS센서와 IMU센서의 데이터를 통해 내 차량의 위치, 자세, 방향을 알 수 있습니다.

/
[판단 / 제어]
판단과 제어를 통해 경로계획과 속도제어를 수행합니다.
경로 계획에는 전역 경로 계획과 지역 경로 계획, 그리고 경로 추종이 포함됩니다.

/
속도 제어는 전방차량 추종을 위해 거리와 속도를 제어하는 기술입니다.


//
\\\\\\\\\\\\
[개발환경]
가상 환경에서 MORAI 라는 Simulator 를 통해 
\\\\\\\\\\\\

[ROS]
ROS는 로봇 소프트웨어를 구현하기 위한 SW 프레임워크로, 개발에 필요한 라이브러리를 제공합니다.
ROS에서 가장 중요한 부분은 ROS 통신인데요, ROS 통신이 가능해야 자율주행에서 원하는 기능을 개발할 수 있습니다. 

/
ROS 통신은 메세지를 통해 데이터를 전송하며, 다음과 같은 구조를 가집니다.(ROS arch)
이러한 노드들이 통신하기 위해서는 topic이 필요하며, 노드들간 약속된 topic 으로 메세지를 publish, subscribe하는 방식으로 데이터를 송수신합니다.
정리하면, ROS 통신은 마스터에 등록된 노드들간 메세지 형태로 데이터를 송수신하는 방식이라 말할 수 있습니다.
실제 시뮬레이터와 ROS간 통신에서는 그림과 같이 ROS bridge가 마스터 역할을 수행하며, Morai와 개발환경을 연결해줍니다.

/
[시연]
/
[기획]

[팀구성]
먼저 저희 팀은 4명의 임베디드 인원과 2명의 비전공 인원으로 구성되어 있습니다.
프로젝트를 진행하는 데 필수적인 수준까지 함께 학습한 뒤 임베디드 인원은 자율주행에, 비전공 인원은 이를 활용한 웹어플리케이션을 제작할 계획입니다. 확실한 기획은 정해지지 않았으며, 현재까지 나온 의견에는 자율주행을 이용한 택시가 있습니다. 간단한 와이어프레임은 이와 같습니다.

/
생소한 개념이 많으셨을텐데 긴 시간동안 경청해주셔서 감사합니다.


[테슬라 사고율]
https://techit.kr/view/?no=20211220002144